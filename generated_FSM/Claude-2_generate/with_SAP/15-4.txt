class ButlerRobot:
    def __init__(self):
        self.states = {
            'INITIAL': self.initial_state, 
            'IDENTIFY_HAZARDS': self.identify_hazards_state,
            'SECURE_OUTLET': self.secure_outlet_state,
            'REMOVE_PLANT': self.remove_plant_state,
            'REMOVE_TOY': self.remove_toy_state,
            'FINAL_CHECK': self.final_check_state
        }
        self.current_state = 'INITIAL'

    def initial_state(self):
        print("Starting room assessment")
        self.current_state = 'IDENTIFY_HAZARDS'

    def identify_hazards_state(self):
        hazards = self.scan_room()
        if 'exposed outlet' in hazards:
            self.current_state = 'SECURE_OUTLET'
        elif 'toxic plant' in hazards: 
            self.current_state = 'REMOVE_PLANT'
        elif 'choking hazard toy' in hazards:
            self.current_state = 'REMOVE_TOY'
        else:
            self.current_state = 'FINAL_CHECK'

    def secure_outlet_state(self):
        print("Covering electrical outlet") 
        self.cover_outlet()
        self.current_state = 'IDENTIFY_HAZARDS'

    def remove_plant_state(self):
        print("Removing toxic plant")
        self.move_plant()
        self.current_state = 'IDENTIFY_HAZARDS'

    def remove_toy_state(self):
        print("Removing unsafe toy")
        self.pickup_toy() 
        self.current_state = 'IDENTIFY_HAZARDS'

    def final_check_state(self):
        print("Doing final safety check")
        if self.scan_room():
            self.current_state = 'IDENTIFY_HAZARDS'
        else:
            print("Room securitization complete")
            self.current_state = 'FINAL_CHECK'
    
    # helper annotation methods
    def scan_room(self):
        print("Scanning room...")
        return []
    
    def cover_outlet(self):
        pass
    
    def move_plant(self):
        pass
    
    def pickup_toy(self):
        pass

butler = ButlerRobot()
butler.run()