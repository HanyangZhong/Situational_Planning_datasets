Certainly! Below is an abstract implementation of a ButlerRobotFSM class in Python, which represents a finite state machine (FSM) for your described scenario. The FSM includes states to check the elderly person's condition, fetch and operate the emergency device, and call for help.

```python
class ButlerRobotFSM:
    def __init__(self):
        """Initialize the robot's state and the elderly person's condition."""
        self.current_state = self.monitor_situation
        self.elderly_condition = "unknown"

    def monitor_situation(self):
        """Check the elderly person's condition and decide on the course of action."""
        if self.elderly_condition == "distressed":
            self.current_state = self.fetch_emergency_device
        else:
            self.current_state = self.monitor_situation

    def fetch_emergency_device(self):
        """Retrieve the emergency device from across the room."""
        # The robot may need to perform several actions like moving, reaching, and gripping...
        self.transport_emergency_device()
        self.current_state = self.activate_emergency_device

    def activate_emergency_device(self):
        """Activate the emergency response system."""
        #pressing, opening or any action required to activate the device
        self.current_state = self.call_for_help

    def call_for_help(self):
        """Call for immediate medical assistance."""
        #robot functionality needed to call for help (possibly calling or signaling)
        self.current_state = self.monitor_situation

    def observe_elderly(self):
        """Update the elderly person's condition, based on the robot's observations."""
        # If the person is distressed, update elderly_condition to "distressed"
        pass

    def respond_to_emergency(self):
        """Execute actions to assist in the emergency."""
        # Could involve actions like reaching, gripping, lifting, or activating the emergency device
        pass

    def transport_emergency_device(self):
        """Transport the device closer to the elderly."""
        # Could involve actions like lifting, lowering, transporting, or placing down the device
        pass

    def run(self):
        """Execute the FSM loop."""
        while True:
            self.observe_elderly()
            self.current_state()

```

This state machine continues to monitor the elderly person's condition. If distress is detected, it switches to the state to fetch and activate the emergency device, and finally calls for help. After every call for help, it returns to monitor the person's condition. Please note that this is a logical representation of FSM assuming the robot has necessary functional capabilities to perform actions. The actionable methods in reality would involve sensor information, movement controls and other robotic functionality not depicted here.